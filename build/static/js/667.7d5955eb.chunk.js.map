{"version":3,"file":"static/js/667.7d5955eb.chunk.js","mappings":"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","sources":["auth/pages/Login.tsx","core/components/BoxedLayout.tsx","core/components/SettingsDrawer.tsx","../node_modules/@material-ui/core/Link/linkClasses.js","../node_modules/@material-ui/core/Link/Link.js"],"sourcesContent":["import Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LoadingButton from \"@material-ui/lab/LoadingButton\";\r\nimport { useFormik } from \"formik\";\r\nimport { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport BoxedLayout from \"../../core/components/BoxedLayout\";\r\nimport { useSnackbar } from \"../../core/contexts/SnackbarProvider\";\r\nimport { useAuth } from \"../contexts/AuthProvider\";\r\n\r\nconst Login = () => {\r\n  const { isLoggingIn, login } = useAuth();\r\n  const navigate = useNavigate();\r\n  const snackbar = useSnackbar();\r\n  const { t } = useTranslation();\r\n\r\n  const handleLogin = (email: string, password: string) => {\r\n    login(email, password)\r\n      .then((data) =>{\r\n        if(data.status)\r\n          navigate(`/${process.env.PUBLIC_URL}/admin`, { replace: true });\r\n        else{\r\n          snackbar.error(data.message);\r\n        }\r\n      })\r\n      .catch(() => snackbar.error(t(\"common.errors.unexpected.subTitle\")));\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"tredcode@success.com\",\r\n      password: \"Success@1234\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email(t(\"common.validations.email\"))\r\n        .required(t(\"common.validations.required\")),\r\n      password: Yup.string()\r\n        .min(8, t(\"common.validations.min\", { size: 8 }))\r\n        .required(t(\"common.validations.required\")),\r\n    }),\r\n    onSubmit: (values) => handleLogin(values.email, values.password),\r\n  });\r\n\r\n  return (\r\n    <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\r\n      <Grid\r\n        item\r\n        xs={false}\r\n        sm={4}\r\n        md={7}\r\n        sx={{\r\n          backgroundImage: \"url(./img/startup.svg)\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          bgcolor: \"background.default\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n        }}\r\n      />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} square>\r\n        <BoxedLayout>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            {t(\"auth.login.title\")}\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            marginTop={3}\r\n            noValidate\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <TextField\r\n              margin=\"normal\"\r\n              variant=\"filled\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label={t(\"auth.login.form.email.label\")}\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              disabled={isLoggingIn}\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              variant=\"filled\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label={t(\"auth.login.form.password.label\")}\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              disabled={isLoggingIn}\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n            />\r\n            <Box sx={{ textAlign: \"right\" }}>\r\n              <Link\r\n                component={RouterLink}\r\n                to={`/${process.env.PUBLIC_URL}/forgot-password`}\r\n                variant=\"body2\"\r\n              >\r\n                {t(\"auth.login.forgotPasswordLink\")}\r\n              </Link>\r\n            </Box>\r\n            <LoadingButton\r\n              type=\"submit\"\r\n              fullWidth\r\n              loading={isLoggingIn}\r\n              variant=\"contained\"\r\n              sx={{ mt: 3 }}\r\n            >\r\n              {t(\"auth.login.submit\")}\r\n            </LoadingButton>\r\n            <Button\r\n              component={RouterLink}\r\n              to={`/${process.env.PUBLIC_URL}/register`}\r\n              color=\"primary\"\r\n              fullWidth\r\n              sx={{ mt: 2 }}\r\n            >\r\n              {t(\"auth.login.newAccountLink\")}\r\n            </Button>\r\n          </Box>\r\n        </BoxedLayout>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport GlobalStyles from \"@material-ui/core/GlobalStyles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport React, { useState } from \"react\";\r\nimport Logo from \"./Logo\";\r\nimport SettingsDrawer from \"./SettingsDrawer\";\r\n\r\ntype BoxedLayoutProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst BoxedLayout = ({ children }: BoxedLayoutProps) => {\r\n  const theme = useTheme();\r\n  const [settingsOpen, setSettingsOpen] = useState(false);\r\n\r\n  const handleSettingsToggle = () => {\r\n    setSettingsOpen(!settingsOpen);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <GlobalStyles\r\n        styles={{ body: { backgroundColor: theme.palette.background.paper } }}\r\n      />\r\n      <AppBar color=\"transparent\" position=\"relative\">\r\n        <Toolbar>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <IconButton\r\n            aria-label=\"settings\"\r\n            component=\"span\"\r\n            onClick={handleSettingsToggle}\r\n          >\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container component=\"main\" maxWidth=\"xs\" sx={{ mt: 6 }}>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Logo sx={{ mb: 2 }} />\r\n          {children}\r\n          <Box>\r\n            <SettingsDrawer\r\n              onDrawerToggle={handleSettingsToggle}\r\n              open={settingsOpen}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BoxedLayout;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport ToggleButton from \"@material-ui/core/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/core/ToggleButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { drawerWidth } from \"../config/layout\";\r\nimport { useSettings } from \"../contexts/SettingsProvider\";\r\n\r\ntype SettingsDrawerProps = {\r\n  onDrawerToggle: () => void;\r\n  open: boolean;\r\n};\r\n\r\nconst SettingsDrawer = ({ onDrawerToggle, open }: SettingsDrawerProps) => {\r\n  const {\r\n    changeCollapsed,\r\n    changeDirection,\r\n    changeMode,\r\n    collapsed,\r\n    direction,\r\n    mode,\r\n  } = useSettings();\r\n  const { i18n, t } = useTranslation();\r\n\r\n  const handleDirectionChange = (_: any, direction: \"ltr\" | \"rtl\") => {\r\n    changeDirection(direction);\r\n  };\r\n\r\n  const handleLanguageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    i18n.changeLanguage((event.target as HTMLInputElement).value);\r\n  };\r\n\r\n  const handleModeChange = (_: any, mode: string) => {\r\n    changeMode(mode);\r\n  };\r\n\r\n  const handleSidebarChange = (_: any, collapsed: boolean) => {\r\n    changeCollapsed(collapsed);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      open={open}\r\n      onClose={onDrawerToggle}\r\n      sx={{\r\n        \"& .MuiDrawer-paper\": {\r\n          width: drawerWidth,\r\n        },\r\n      }}\r\n      variant=\"temporary\"\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          p: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\">{t(\"settings.drawer.title\")}</Typography>\r\n        <IconButton color=\"inherit\" onClick={onDrawerToggle} edge=\"end\">\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </Box>\r\n      <Box sx={{ pl: 2, pr: 2 }}>\r\n        <Typography\r\n          gutterBottom\r\n          id=\"settings-language\"\r\n          marginTop={3}\r\n          variant=\"h6\"\r\n        >\r\n          {t(\"settings.drawer.language.label\")}\r\n        </Typography>\r\n        <FormControl>\r\n          <RadioGroup\r\n            aria-label=\"language\"\r\n            name=\"language-radio-group\"\r\n            onChange={handleLanguageChange}\r\n            value={i18n.language}\r\n          >\r\n            <FormControlLabel\r\n              value=\"en\"\r\n              control={<Radio />}\r\n              label={t(\"settings.drawer.language.options.en\")}\r\n            />\r\n            <FormControlLabel\r\n              value=\"fr\"\r\n              control={<Radio />}\r\n              label={t(\"settings.drawer.language.options.fr\")}\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\r\n          {t(\"settings.drawer.mode.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={mode}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleModeChange}\r\n        >\r\n          <ToggleButton value=\"light\">\r\n            {t(\"settings.drawer.mode.options.light\")}\r\n          </ToggleButton>\r\n          <ToggleButton value=\"dark\">\r\n            {t(\"settings.drawer.mode.options.dark\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\r\n          {t(\"settings.drawer.direction.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={direction}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleDirectionChange}\r\n        >\r\n          <ToggleButton value=\"ltr\">\r\n            {t(\"settings.drawer.direction.options.ltr\")}\r\n          </ToggleButton>\r\n          <ToggleButton value=\"rtl\">\r\n            {t(\"settings.drawer.direction.options.rtl\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n        <Typography\r\n          gutterBottom\r\n          id=\"settings-sidebar\"\r\n          marginTop={3}\r\n          variant=\"h6\"\r\n        >\r\n          {t(\"settings.drawer.sidebar.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={collapsed}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleSidebarChange}\r\n        >\r\n          <ToggleButton value={true}>\r\n            {t(\"settings.drawer.sidebar.options.collapsed\")}\r\n          </ToggleButton>\r\n          <ToggleButton value={false}>\r\n            {t(\"settings.drawer.sidebar.options.full\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SettingsDrawer;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport capitalize from '../utils/capitalize';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = styleProps;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = experimentalStyled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styles[`underline${capitalize(styleProps.underline)}`], styleProps.component === 'button' && styles.button);\n  }\n})(({\n  styleProps\n}) => {\n  return _extends({}, styleProps.underline === 'none' && {\n    textDecoration: 'none'\n  }, styleProps.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, styleProps.underline === 'always' && {\n    textDecoration: 'underline'\n  }, styleProps.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'hover',\n    variant = 'inherit'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const styleProps = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    styleProps: styleProps,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'hover'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["_useAuth","useAuth","isLoggingIn","login","navigate","useNavigate","snackbar","useSnackbar","t","useTranslation","formik","useFormik","initialValues","email","password","validationSchema","Yup","required","min","size","onSubmit","values","then","data","status","concat","process","replace","error","message","catch","_jsxs","Grid","container","component","sx","height","children","_jsx","item","xs","sm","md","backgroundImage","backgroundRepeat","bgcolor","backgroundSize","backgroundPosition","Paper","square","BoxedLayout","Typography","variant","Box","marginTop","noValidate","handleSubmit","TextField","margin","fullWidth","id","label","name","autoComplete","autoFocus","disabled","value","onChange","handleChange","touched","Boolean","errors","helperText","type","textAlign","Link","RouterLink","to","LoadingButton","loading","mt","Button","color","_ref","theme","useTheme","_useState","useState","_useState2","_slicedToArray","settingsOpen","setSettingsOpen","handleSettingsToggle","React","GlobalStyles","styles","body","backgroundColor","palette","background","paper","AppBar","position","Toolbar","flexGrow","IconButton","onClick","SettingsIcon","Container","maxWidth","display","flexDirection","alignItems","Logo","mb","SettingsDrawer","onDrawerToggle","open","_useSettings","useSettings","changeCollapsed","changeDirection","changeMode","collapsed","direction","mode","_useTranslation","i18n","Drawer","anchor","onClose","width","drawerWidth","justifyContent","p","edge","CloseIcon","pl","pr","gutterBottom","FormControl","RadioGroup","event","changeLanguage","target","language","FormControlLabel","control","Radio","ToggleButtonGroup","exclusive","_","ToggleButton","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","LinkRoot","experimentalStyled","overridesResolver","props","styleProps","_extends","root","capitalize","underline","button","textDecoration","_defineProperty","WebkitTapHighlightColor","outline","border","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","inProps","ref","useThemeProps","className","_props$color","_props$component","onBlur","onFocus","TypographyClasses","_props$underline","_props$variant","other","_objectWithoutPropertiesLoose","_useIsFocusVisible","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","_React$useState","_React$useState2","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","clsx","current"],"sourceRoot":""}