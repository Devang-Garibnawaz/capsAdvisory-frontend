{"version":3,"file":"static/js/875.924e7ec7.chunk.js","mappings":"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","sources":["auth/hooks/useForgotPasswordSubmit.ts","auth/pages/ForgotPasswordSubmit.tsx","core/components/BoxedLayout.tsx","core/components/SettingsDrawer.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useMutation } from \"react-query\";\r\n\r\nconst forgotPasswordSubmit = async ({\r\n  code,\r\n  newPassword,\r\n}: {\r\n  code: string;\r\n  newPassword: string;\r\n}) => {\r\n  const { data } = await axios.post(\"/api/forgot-password-submit\", {\r\n    code,\r\n    newPassword,\r\n  });\r\n  return data;\r\n};\r\n\r\nexport function useForgotPasswordSubmit() {\r\n  const { isLoading, mutateAsync } = useMutation(forgotPasswordSubmit);\r\n  return { isLoading, forgotPasswordSubmit: mutateAsync };\r\n}\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LoadingButton from \"@material-ui/lab/LoadingButton\";\r\nimport { useFormik } from \"formik\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport BoxedLayout from \"../../core/components/BoxedLayout\";\r\nimport { useSnackbar } from \"../../core/contexts/SnackbarProvider\";\r\nimport { useForgotPasswordSubmit } from \"../hooks/useForgotPasswordSubmit\";\r\n\r\nconst ForgotPasswordSubmit = () => {\r\n  const navigate = useNavigate();\r\n  const snackbar = useSnackbar();\r\n  const { t } = useTranslation();\r\n\r\n  const { forgotPasswordSubmit, isLoading } = useForgotPasswordSubmit();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      code: \"\",\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required(t(\"common.validations.required\")),\r\n      newPassword: Yup.string().required(t(\"common.validations.required\")),\r\n      confirmPassword: Yup.string().required(t(\"common.validations.required\")),\r\n    }),\r\n    onSubmit: ({ code, newPassword }) =>\r\n      handleSubmitPassword(code, newPassword),\r\n  });\r\n\r\n  const handleSubmitPassword = async (code: string, newPassword: string) => {\r\n    forgotPasswordSubmit({ code, newPassword })\r\n      .then(() => {\r\n        snackbar.success(t(\"auth.forgotPasswordSubmit.notifications.success\"));\r\n        navigate(`/${process.env.PUBLIC_URL}/login`);\r\n      })\r\n      .catch(() => {\r\n        snackbar.error(t(\"common.errors.unexpected.subTitle\"));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <BoxedLayout>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        {t(\"auth.forgotPasswordSubmit.title\")}\r\n      </Typography>\r\n      <Typography marginTop={3}>\r\n        {t(\"auth.forgotPasswordSubmit.subTitle\")}\r\n      </Typography>\r\n      <Box\r\n        component=\"form\"\r\n        marginTop={3}\r\n        noValidate\r\n        onSubmit={formik.handleSubmit}\r\n      >\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"code\"\r\n          label={t(\"auth.forgotPasswordSubmit.form.code.label\")}\r\n          name=\"code\"\r\n          autoFocus\r\n          disabled={isLoading}\r\n          value={formik.values.code}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.code && Boolean(formik.errors.code)}\r\n          helperText={formik.touched.code && formik.errors.code}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"newPassword\"\r\n          label={t(\"auth.forgotPasswordSubmit.form.newPassword.label\")}\r\n          type=\"password\"\r\n          id=\"newPassword\"\r\n          disabled={isLoading}\r\n          value={formik.values.newPassword}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.newPassword && Boolean(formik.errors.newPassword)\r\n          }\r\n          helperText={formik.touched.newPassword && formik.errors.newPassword}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"confirmPassword\"\r\n          label={t(\"auth.forgotPasswordSubmit.form.confirmPassword.label\")}\r\n          type=\"password\"\r\n          id=\"confirmPassword\"\r\n          disabled={isLoading}\r\n          value={formik.values.confirmPassword}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.confirmPassword &&\r\n            Boolean(formik.errors.confirmPassword)\r\n          }\r\n          helperText={\r\n            formik.touched.confirmPassword && formik.errors.confirmPassword\r\n          }\r\n        />\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled={isLoading}\r\n          loading={isLoading}\r\n          sx={{ mt: 2 }}\r\n        >\r\n          {t(\"auth.forgotPasswordSubmit.form.action\")}\r\n        </LoadingButton>\r\n        <Button\r\n          component={Link}\r\n          to={`/${process.env.PUBLIC_URL}/login`}\r\n          color=\"primary\"\r\n          fullWidth\r\n          sx={{ mt: 2 }}\r\n        >\r\n          {t(\"auth.forgotPasswordSubmit.form.back\")}\r\n        </Button>\r\n      </Box>\r\n    </BoxedLayout>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordSubmit;\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport GlobalStyles from \"@material-ui/core/GlobalStyles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport React, { useState } from \"react\";\r\nimport Logo from \"./Logo\";\r\nimport SettingsDrawer from \"./SettingsDrawer\";\r\n\r\ntype BoxedLayoutProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst BoxedLayout = ({ children }: BoxedLayoutProps) => {\r\n  const theme = useTheme();\r\n  const [settingsOpen, setSettingsOpen] = useState(false);\r\n\r\n  const handleSettingsToggle = () => {\r\n    setSettingsOpen(!settingsOpen);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <GlobalStyles\r\n        styles={{ body: { backgroundColor: theme.palette.background.paper } }}\r\n      />\r\n      <AppBar color=\"transparent\" position=\"relative\">\r\n        <Toolbar>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <IconButton\r\n            aria-label=\"settings\"\r\n            component=\"span\"\r\n            onClick={handleSettingsToggle}\r\n          >\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container component=\"main\" maxWidth=\"xs\" sx={{ mt: 6 }}>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Logo sx={{ mb: 2 }} />\r\n          {children}\r\n          <Box>\r\n            <SettingsDrawer\r\n              onDrawerToggle={handleSettingsToggle}\r\n              open={settingsOpen}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BoxedLayout;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport ToggleButton from \"@material-ui/core/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/core/ToggleButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { drawerWidth } from \"../config/layout\";\r\nimport { useSettings } from \"../contexts/SettingsProvider\";\r\n\r\ntype SettingsDrawerProps = {\r\n  onDrawerToggle: () => void;\r\n  open: boolean;\r\n};\r\n\r\nconst SettingsDrawer = ({ onDrawerToggle, open }: SettingsDrawerProps) => {\r\n  const {\r\n    changeCollapsed,\r\n    changeDirection,\r\n    changeMode,\r\n    collapsed,\r\n    direction,\r\n    mode,\r\n  } = useSettings();\r\n  const { i18n, t } = useTranslation();\r\n\r\n  const handleDirectionChange = (_: any, direction: \"ltr\" | \"rtl\") => {\r\n    changeDirection(direction);\r\n  };\r\n\r\n  const handleLanguageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    i18n.changeLanguage((event.target as HTMLInputElement).value);\r\n  };\r\n\r\n  const handleModeChange = (_: any, mode: string) => {\r\n    changeMode(mode);\r\n  };\r\n\r\n  const handleSidebarChange = (_: any, collapsed: boolean) => {\r\n    changeCollapsed(collapsed);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      open={open}\r\n      onClose={onDrawerToggle}\r\n      sx={{\r\n        \"& .MuiDrawer-paper\": {\r\n          width: drawerWidth,\r\n        },\r\n      }}\r\n      variant=\"temporary\"\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          p: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\">{t(\"settings.drawer.title\")}</Typography>\r\n        <IconButton color=\"inherit\" onClick={onDrawerToggle} edge=\"end\">\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </Box>\r\n      <Box sx={{ pl: 2, pr: 2 }}>\r\n        <Typography\r\n          gutterBottom\r\n          id=\"settings-language\"\r\n          marginTop={3}\r\n          variant=\"h6\"\r\n        >\r\n          {t(\"settings.drawer.language.label\")}\r\n        </Typography>\r\n        <FormControl>\r\n          <RadioGroup\r\n            aria-label=\"language\"\r\n            name=\"language-radio-group\"\r\n            onChange={handleLanguageChange}\r\n            value={i18n.language}\r\n          >\r\n            <FormControlLabel\r\n              value=\"en\"\r\n              control={<Radio />}\r\n              label={t(\"settings.drawer.language.options.en\")}\r\n            />\r\n            <FormControlLabel\r\n              value=\"fr\"\r\n              control={<Radio />}\r\n              label={t(\"settings.drawer.language.options.fr\")}\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\r\n          {t(\"settings.drawer.mode.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={mode}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleModeChange}\r\n        >\r\n          <ToggleButton value=\"light\">\r\n            {t(\"settings.drawer.mode.options.light\")}\r\n          </ToggleButton>\r\n          <ToggleButton value=\"dark\">\r\n            {t(\"settings.drawer.mode.options.dark\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\r\n          {t(\"settings.drawer.direction.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={direction}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleDirectionChange}\r\n        >\r\n          <ToggleButton value=\"ltr\">\r\n            {t(\"settings.drawer.direction.options.ltr\")}\r\n          </ToggleButton>\r\n          <ToggleButton value=\"rtl\">\r\n            {t(\"settings.drawer.direction.options.rtl\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n        <Typography\r\n          gutterBottom\r\n          id=\"settings-sidebar\"\r\n          marginTop={3}\r\n          variant=\"h6\"\r\n        >\r\n          {t(\"settings.drawer.sidebar.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={collapsed}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleSidebarChange}\r\n        >\r\n          <ToggleButton value={true}>\r\n            {t(\"settings.drawer.sidebar.options.collapsed\")}\r\n          </ToggleButton>\r\n          <ToggleButton value={false}>\r\n            {t(\"settings.drawer.sidebar.options.full\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SettingsDrawer;\r\n"],"names":["forgotPasswordSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","code","newPassword","_yield$axios$post","data","wrap","_context","prev","next","axios","post","sent","abrupt","stop","_x","apply","arguments","useForgotPasswordSubmit","_useMutation","useMutation","isLoading","mutateAsync","navigate","useNavigate","snackbar","useSnackbar","t","useTranslation","_useForgotPasswordSub","formik","useFormik","initialValues","confirmPassword","validationSchema","Yup","required","onSubmit","handleSubmitPassword","then","success","concat","process","catch","error","_x2","_jsxs","BoxedLayout","children","_jsx","Typography","component","variant","marginTop","Box","noValidate","handleSubmit","TextField","margin","fullWidth","id","label","name","autoFocus","disabled","value","values","onChange","handleChange","touched","Boolean","errors","helperText","type","LoadingButton","color","loading","sx","mt","Button","Link","to","theme","useTheme","_useState","useState","_useState2","_slicedToArray","settingsOpen","setSettingsOpen","handleSettingsToggle","React","GlobalStyles","styles","body","backgroundColor","palette","background","paper","AppBar","position","Toolbar","flexGrow","IconButton","onClick","SettingsIcon","Container","maxWidth","display","flexDirection","alignItems","Logo","mb","SettingsDrawer","onDrawerToggle","open","_useSettings","useSettings","changeCollapsed","changeDirection","changeMode","collapsed","direction","mode","_useTranslation","i18n","Drawer","anchor","onClose","width","drawerWidth","justifyContent","p","edge","CloseIcon","pl","pr","gutterBottom","FormControl","RadioGroup","event","changeLanguage","target","language","FormControlLabel","control","Radio","ToggleButtonGroup","exclusive","_","ToggleButton"],"sourceRoot":""}