{"version":3,"file":"static/js/141.2ca3a8a5.chunk.js","mappings":"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","sources":["auth/hooks/useForgotPasswordSubmit.ts","auth/pages/ForgotPasswordSubmit.tsx","core/components/BoxedLayout.tsx","core/components/SettingsDrawer.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useMutation } from \"react-query\";\r\n\r\nconst forgotPasswordSubmit = async ({\r\n  code,\r\n  newPassword,\r\n}: {\r\n  code: string;\r\n  newPassword: string;\r\n}) => {\r\n  const { data } = await axios.post(\"/api/forgot-password-submit\", {\r\n    code,\r\n    newPassword,\r\n  });\r\n  return data;\r\n};\r\n\r\nexport function useForgotPasswordSubmit() {\r\n  const { isLoading, mutateAsync } = useMutation(forgotPasswordSubmit);\r\n  return { isLoading, forgotPasswordSubmit: mutateAsync };\r\n}\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LoadingButton from \"@material-ui/lab/LoadingButton\";\r\nimport { useFormik } from \"formik\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport BoxedLayout from \"../../core/components/BoxedLayout\";\r\nimport { useSnackbar } from \"../../core/contexts/SnackbarProvider\";\r\nimport { useForgotPasswordSubmit } from \"../hooks/useForgotPasswordSubmit\";\r\n\r\nconst ForgotPasswordSubmit = () => {\r\n  const navigate = useNavigate();\r\n  const snackbar = useSnackbar();\r\n  const { t } = useTranslation();\r\n\r\n  const { forgotPasswordSubmit, isLoading } = useForgotPasswordSubmit();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      code: \"\",\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required(t(\"common.validations.required\")),\r\n      newPassword: Yup.string().required(t(\"common.validations.required\")),\r\n      confirmPassword: Yup.string().required(t(\"common.validations.required\")),\r\n    }),\r\n    onSubmit: ({ code, newPassword }) =>\r\n      handleSubmitPassword(code, newPassword),\r\n  });\r\n\r\n  const handleSubmitPassword = async (code: string, newPassword: string) => {\r\n    forgotPasswordSubmit({ code, newPassword })\r\n      .then(() => {\r\n        snackbar.success(t(\"auth.forgotPasswordSubmit.notifications.success\"));\r\n        navigate(`/${process.env.PUBLIC_URL}/login`);\r\n      })\r\n      .catch(() => {\r\n        snackbar.error(t(\"common.errors.unexpected.subTitle\"));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <BoxedLayout>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        {t(\"auth.forgotPasswordSubmit.title\")}\r\n      </Typography>\r\n      <Typography marginTop={3}>\r\n        {t(\"auth.forgotPasswordSubmit.subTitle\")}\r\n      </Typography>\r\n      <Box\r\n        component=\"form\"\r\n        marginTop={3}\r\n        noValidate\r\n        onSubmit={formik.handleSubmit}\r\n      >\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"code\"\r\n          label={t(\"auth.forgotPasswordSubmit.form.code.label\")}\r\n          name=\"code\"\r\n          autoFocus\r\n          disabled={isLoading}\r\n          value={formik.values.code}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.code && Boolean(formik.errors.code)}\r\n          helperText={formik.touched.code && formik.errors.code}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"newPassword\"\r\n          label={t(\"auth.forgotPasswordSubmit.form.newPassword.label\")}\r\n          type=\"password\"\r\n          id=\"newPassword\"\r\n          disabled={isLoading}\r\n          value={formik.values.newPassword}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.newPassword && Boolean(formik.errors.newPassword)\r\n          }\r\n          helperText={formik.touched.newPassword && formik.errors.newPassword}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"confirmPassword\"\r\n          label={t(\"auth.forgotPasswordSubmit.form.confirmPassword.label\")}\r\n          type=\"password\"\r\n          id=\"confirmPassword\"\r\n          disabled={isLoading}\r\n          value={formik.values.confirmPassword}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.confirmPassword &&\r\n            Boolean(formik.errors.confirmPassword)\r\n          }\r\n          helperText={\r\n            formik.touched.confirmPassword && formik.errors.confirmPassword\r\n          }\r\n        />\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled={isLoading}\r\n          loading={isLoading}\r\n          sx={{ mt: 2 }}\r\n        >\r\n          {t(\"auth.forgotPasswordSubmit.form.action\")}\r\n        </LoadingButton>\r\n        <Button\r\n          component={Link}\r\n          to={`/${process.env.PUBLIC_URL}/login`}\r\n          color=\"primary\"\r\n          fullWidth\r\n          sx={{ mt: 2 }}\r\n        >\r\n          {t(\"auth.forgotPasswordSubmit.form.back\")}\r\n        </Button>\r\n      </Box>\r\n    </BoxedLayout>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordSubmit;\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport GlobalStyles from \"@material-ui/core/GlobalStyles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport React, { useState } from \"react\";\r\nimport Logo from \"./Logo\";\r\nimport SettingsDrawer from \"./SettingsDrawer\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { useAuth } from \"../../auth/contexts/AuthProvider\";\r\nimport { useSnackbar } from \"../../core/contexts/SnackbarProvider\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\ntype BoxedLayoutProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst BoxedLayout = ({ children }: BoxedLayoutProps) => {\r\n  const theme = useTheme();\r\n  const [settingsOpen, setSettingsOpen] = useState(false);\r\n  const { logout, userInfo } = useAuth();\r\n  const snackbar = useSnackbar();\r\n  const token = localStorage.getItem('authkey');\r\n  \r\n  const handleSettingsToggle = () => {\r\n    setSettingsOpen(!settingsOpen);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout().then(()=>{\r\n      <Navigate to={`/${process.env.PUBLIC_URL}`} replace/>\r\n    }).catch((err:any) =>\r\n      snackbar.error(err)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <GlobalStyles\r\n        styles={{ body: { backgroundColor: theme.palette.background.paper } }}\r\n      />\r\n      <AppBar color=\"transparent\" position=\"relative\">\r\n        <Toolbar>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          {token != '' && <IconButton\r\n            aria-label=\"logout\"\r\n            component=\"span\"\r\n            onClick={handleLogout}\r\n          >\r\n            <ExitToAppIcon />\r\n          </IconButton>}\r\n          <IconButton\r\n            aria-label=\"settings\"\r\n            component=\"span\"\r\n            onClick={handleSettingsToggle}\r\n          >\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container component=\"main\" maxWidth=\"xs\" sx={{ mt: 6 }}>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Logo sx={{ mb: 2 }} />\r\n          {children}\r\n          <Box>\r\n            <SettingsDrawer\r\n              onDrawerToggle={handleSettingsToggle}\r\n              open={settingsOpen}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BoxedLayout;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport ToggleButton from \"@material-ui/core/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/core/ToggleButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { drawerWidth } from \"../config/layout\";\r\nimport { useSettings } from \"../contexts/SettingsProvider\";\r\n\r\ntype SettingsDrawerProps = {\r\n  onDrawerToggle: () => void;\r\n  open: boolean;\r\n};\r\n\r\nconst SettingsDrawer = ({ onDrawerToggle, open }: SettingsDrawerProps) => {\r\n  const {\r\n    changeCollapsed,\r\n    changeDirection,\r\n    changeMode,\r\n    collapsed,\r\n    direction,\r\n    mode,\r\n  } = useSettings();\r\n  const { i18n, t } = useTranslation();\r\n\r\n  const handleDirectionChange = (_: any, direction: \"ltr\" | \"rtl\") => {\r\n    changeDirection(direction);\r\n  };\r\n\r\n  const handleLanguageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    i18n.changeLanguage((event.target as HTMLInputElement).value);\r\n  };\r\n\r\n  const handleModeChange = (_: any, mode: string) => {\r\n    changeMode(mode);\r\n  };\r\n\r\n  const handleSidebarChange = (_: any, collapsed: boolean) => {\r\n    changeCollapsed(collapsed);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      open={open}\r\n      onClose={onDrawerToggle}\r\n      sx={{\r\n        \"& .MuiDrawer-paper\": {\r\n          width: drawerWidth,\r\n        },\r\n      }}\r\n      variant=\"temporary\"\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          p: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\">{t(\"settings.drawer.title\")}</Typography>\r\n        <IconButton color=\"inherit\" onClick={onDrawerToggle} edge=\"end\">\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </Box>\r\n      <Box sx={{ pl: 2, pr: 2 }}>\r\n        <Typography\r\n          gutterBottom\r\n          id=\"settings-language\"\r\n          marginTop={3}\r\n          variant=\"h6\"\r\n        >\r\n          {t(\"settings.drawer.language.label\")}\r\n        </Typography>\r\n        <FormControl>\r\n          <RadioGroup\r\n            aria-label=\"language\"\r\n            name=\"language-radio-group\"\r\n            onChange={handleLanguageChange}\r\n            value={i18n.language}\r\n          >\r\n            <FormControlLabel\r\n              value=\"en\"\r\n              control={<Radio />}\r\n              label={t(\"settings.drawer.language.options.en\")}\r\n            />\r\n            <FormControlLabel\r\n              value=\"fr\"\r\n              control={<Radio />}\r\n              label={t(\"settings.drawer.language.options.fr\")}\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\r\n          {t(\"settings.drawer.mode.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={mode}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleModeChange}\r\n        >\r\n          <ToggleButton value=\"light\">\r\n            {t(\"settings.drawer.mode.options.light\")}\r\n          </ToggleButton>\r\n          <ToggleButton value=\"dark\">\r\n            {t(\"settings.drawer.mode.options.dark\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\r\n          {t(\"settings.drawer.direction.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={direction}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleDirectionChange}\r\n        >\r\n          <ToggleButton value=\"ltr\">\r\n            {t(\"settings.drawer.direction.options.ltr\")}\r\n          </ToggleButton>\r\n          <ToggleButton value=\"rtl\">\r\n            {t(\"settings.drawer.direction.options.rtl\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n        <Typography\r\n          gutterBottom\r\n          id=\"settings-sidebar\"\r\n          marginTop={3}\r\n          variant=\"h6\"\r\n        >\r\n          {t(\"settings.drawer.sidebar.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={collapsed}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleSidebarChange}\r\n        >\r\n          <ToggleButton value={true}>\r\n            {t(\"settings.drawer.sidebar.options.collapsed\")}\r\n          </ToggleButton>\r\n          <ToggleButton value={false}>\r\n            {t(\"settings.drawer.sidebar.options.full\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SettingsDrawer;\r\n"],"names":["forgotPasswordSubmit","async","code","newPassword","_ref","data","axios","post","useForgotPasswordSubmit","isLoading","mutateAsync","useMutation","ForgotPasswordSubmit","navigate","useNavigate","snackbar","useSnackbar","t","useTranslation","formik","useFormik","initialValues","confirmPassword","validationSchema","Yup","required","onSubmit","handleSubmitPassword","then","success","catch","error","_jsxs","BoxedLayout","children","_jsx","Typography","component","variant","marginTop","Box","noValidate","handleSubmit","TextField","margin","fullWidth","id","label","name","autoFocus","disabled","value","values","onChange","handleChange","touched","Boolean","errors","helperText","type","LoadingButton","color","loading","sx","mt","Button","Link","to","theme","useTheme","settingsOpen","setSettingsOpen","useState","logout","userInfo","useAuth","token","localStorage","getItem","handleSettingsToggle","React","GlobalStyles","styles","body","backgroundColor","palette","background","paper","AppBar","position","Toolbar","flexGrow","IconButton","onClick","handleLogout","Navigate","err","ExitToAppIcon","SettingsIcon","Container","maxWidth","display","flexDirection","alignItems","Logo","mb","SettingsDrawer","onDrawerToggle","open","changeCollapsed","changeDirection","changeMode","collapsed","direction","mode","useSettings","i18n","Drawer","anchor","onClose","width","drawerWidth","justifyContent","p","edge","CloseIcon","pl","pr","gutterBottom","FormControl","RadioGroup","event","changeLanguage","target","language","FormControlLabel","control","Radio","ToggleButtonGroup","exclusive","handleModeChange","_","ToggleButton","handleDirectionChange","handleSidebarChange"],"sourceRoot":""}