{"version":3,"file":"static/js/569.d3be706c.chunk.js","mappings":"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","sources":["users/components/LoginUsersTable.tsx","users/hooks/userServices.tsx","users/pages/loginUserManagement.tsx","../node_modules/@mui/icons-material/Refresh.js","../node_modules/@material-ui/icons/esm/ArrowBackIos.js","../node_modules/@material-ui/icons/esm/ArrowForwardIos.js","../node_modules/@material-ui/core/CardHeader/cardHeaderClasses.js","../node_modules/@material-ui/core/CardHeader/CardHeader.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Empty from \"../../core/components/Empty\";\r\nimport { Users } from \"../types/Users\";\r\nimport moment from \"moment\";\r\nimport { DataGrid, GridColDef, GridToolbarColumnsButton, GridToolbarContainer, GridToolbarDensitySelector, GridToolbarExport, GridToolbarFilterButton } from \"@mui/x-data-grid\";\r\nimport Box from '@mui/material/Box';\r\n\r\ntype LoginUsersProps = {\r\n  loginUsersData?: Users[];\r\n  columns: GridColDef[];\r\n};\r\n\r\nconst LoginUsersTable = ({\r\n  loginUsersData = [],\r\n  columns=[]\r\n}: LoginUsersProps) => {\r\n\r\n  const [pageSize, setPageSize] = React.useState<number>(20);\r\n\r\n  if (loginUsersData.length === 0) {\r\n    return <Empty title=\"No Data Found\" />;\r\n  }\r\n\r\n  function CustomToolbar() {\r\n    return (\r\n      <GridToolbarContainer sx={{padding:'1px'}}>\r\n        <GridToolbarColumnsButton sx={{padding:'14px'}} onResize={undefined} nonce={undefined} onResizeCapture={undefined} />\r\n        <GridToolbarFilterButton sx={{padding:'14px'}} onResize={undefined} nonce={undefined} onResizeCapture={undefined} />\r\n        <GridToolbarDensitySelector sx={{padding:'14px'}} onResize={undefined} nonce={undefined} onResizeCapture={undefined} />\r\n        <GridToolbarExport sx={{padding:'14px'}} />\r\n      </GridToolbarContainer>\r\n    );\r\n  }\r\n  return (\r\n    \r\n      <Box sx={{\r\n                  height: '580px', \r\n                  width: '100%',\r\n                  '& .super-app-theme--cell': {\r\n                    backgroundColor: 'rgba(224, 183, 60, 0.55)',\r\n                    color: '#1a3e72',\r\n                    fontWeight: '600',\r\n                  },\r\n                  '& .super-app.negative': {\r\n                    color: '#f35631',\r\n                    fontWeight: '600',\r\n                  },\r\n                  '& .super-app.positive': {\r\n                    color: '#10b983',\r\n                    fontWeight: '600',\r\n                  }\r\n                }}>\r\n        <DataGrid\r\n          rows={loginUsersData}\r\n          disableColumnSelector={true}\r\n          columns={columns}\r\n          isRowSelectable={(row:any)=>row.id}\r\n          components={{\r\n            Toolbar: CustomToolbar,\r\n          }}\r\n          density=\"compact\"\r\n          pageSize={pageSize}\r\n          onPageSizeChange={(newPageSize) => setPageSize(newPageSize)} \r\n          getRowId={(row: any) =>  row.id}\r\n          rowsPerPageOptions={[5,10,20,100]}\r\n        />\r\n      </Box>\r\n    \r\n  );\r\n};\r\n\r\n\r\nexport default LoginUsersTable;","import { getBaseUrl } from \"../../http/globalUrl\";\r\nimport { getRequiredHeaders } from \"../../services/userService\";\r\n\r\nconst BASE_URL = getBaseUrl();\r\nconst GET_LOGIN_USERS_LIST ='users/getLoginUsers';\r\nconst POST_TRADE_ON_OFF ='users/tradeToggle';\r\nconst POST_CHANGE_USER_STATUS ='users/updateUserStatus';\r\nconst POST_AUTO_LOGIN_USERS ='users/autoLoginAngel';\r\nconst POST_DELETE_LOGIN_USER = 'users/deleteLoginUser';\r\n\r\nexport async function FetchLoginUsersDataService(date:Date){\r\n\r\n    try {\r\n        let strDate = date.getFullYear()+'-'+(date.getMonth() + 1) +'-'+date.getDate();\r\n        const response = await fetch(`${BASE_URL}${GET_LOGIN_USERS_LIST}?date=${strDate}`,{\r\n            headers: await getRequiredHeaders()\r\n        });\r\n        const json = await response.json();\r\n        return json.usersData;\r\n    } catch (error) {\r\n        console.log('Error fetching data:', error);\r\n        throw new Error('Failed to fetch data');\r\n    }\r\n}\r\n\r\nexport async function tradeToggle(clientCode:string,status:boolean){\r\n\r\n    try {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({clientCode:clientCode,trade:status})\r\n        };\r\n        const response = await fetch(`${BASE_URL}${POST_TRADE_ON_OFF}`,requestOptions);\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.log('Error trade toggle:', error);\r\n        throw new Error('Failed to toggle trade for user');\r\n    }\r\n}\r\n\r\nexport async function deleteLoginUser(id: string){\r\n    try {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: await getRequiredHeaders(),\r\n            body: JSON.stringify({id})\r\n        };\r\n        const response = await fetch(`${BASE_URL}${POST_DELETE_LOGIN_USER}`,requestOptions);\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.log('Error trade toggle:', error);\r\n        throw new Error('Failed to toggle trade for user');\r\n    }\r\n}\r\nexport async function updateUserStatus(clientCode:string,status:boolean){\r\n\r\n    try {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({clientCode:clientCode,isActive:status})\r\n        };\r\n        const response = await fetch(`${BASE_URL}${POST_CHANGE_USER_STATUS}`,requestOptions);\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.log('Error trade toggle:', error);\r\n        throw new Error('Failed to toggle trade for user');\r\n    }\r\n}\r\n\r\nexport async function autoLoginAngel(){\r\n    \r\n    try {\r\n        const response = await fetch(`${BASE_URL}${POST_AUTO_LOGIN_USERS}`,{method:'POST'});\r\n        const json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.log('Error fetching data:', error);\r\n        throw new Error('Failed to fetch data');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport AdminAppBar from \"../../admin/components/AdminAppBar\";\r\nimport AdminToolbar from \"../../admin/components/AdminToolbar\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CircularProgress,\r\n  Grid,\r\n  IconButton,\r\n  Skeleton,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useSnackbar } from \"../../core/contexts/SnackbarProvider\";\r\nimport LoginUsersTable from \"../components/LoginUsersTable\";\r\nimport { GridColDef } from \"@mui/x-data-grid\";\r\nimport {\r\n  autoLoginAngel,\r\n  deleteLoginUser,\r\n  FetchLoginUsersDataService,\r\n  tradeToggle,\r\n  updateUserStatus,\r\n} from \"../hooks/userServices\";\r\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\r\nimport { DatePicker, LoadingButton } from \"@material-ui/lab\";\r\nimport { ArrowBackIos, ArrowForwardIos } from \"@material-ui/icons\";\r\n\r\nconst LoginUsersManagement = () => {\r\n  const orderDataColumns: GridColDef[] = [\r\n    {\r\n      field: \"isTradeEnabled\",\r\n      headerName: \"Trading\",\r\n      width: 250,\r\n      renderCell: (params) =>\r\n        params.row.isTradeEnabled ? (\r\n          <Button\r\n            sx={{\r\n              padding: \"1px 6px\",\r\n              borderRadius: \"5px\",\r\n              backgroundColor: \"#1fa91f\",\r\n              color: \"#ffff\",\r\n              borderColor: \"ffff\",\r\n            }}\r\n            variant=\"outlined\"\r\n            onClick={() => handleTradeOnOff(params.row)}\r\n          >\r\n            Trading is On\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            sx={{\r\n              padding: \"1px 6px\",\r\n              borderRadius: \"5px\",\r\n              backgroundColor: \"#e33838\",\r\n              color: \"#ffff\",\r\n              borderColor: \"ffff\",\r\n            }}\r\n            variant=\"outlined\"\r\n            onClick={() => handleTradeOnOff(params.row)}\r\n          >\r\n            Trading is Off\r\n          </Button>\r\n        ),\r\n    },\r\n    { field: \"clientId\", headerName: \"Client Code\", width: 250, align: \"left\" },\r\n    { field: \"name\", headerName: \"Client Name\", width: 250, align: \"left\" },\r\n    {\r\n      field: \"loginDateAndTime\",\r\n      headerName: \"Login Date Time\",\r\n      headerAlign: \"center\",\r\n      width: 310,\r\n      align: \"left\",\r\n      valueGetter: (params) => {\r\n        const date = new Date(params.row.loginDateAndTime);\r\n        let hours = date.getHours();\r\n        let minutes = date.getMinutes();\r\n        var ampm = hours >= 12 ? \"pm\" : \"am\";\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n        minutes = minutes < 10 ? 0 + minutes : minutes;\r\n        var strTime =\r\n          date.getFullYear() +\r\n          \"-\" +\r\n          (date.getMonth() + 1) +\r\n          \"-\" +\r\n          date.getDate() +\r\n          \"  \" +\r\n          hours +\r\n          \":\" +\r\n          (minutes < 10 ? \"0\" : \"\") +\r\n          minutes +\r\n          \" \" +\r\n          ampm;\r\n        return strTime;\r\n      },\r\n    },\r\n    {\r\n      field: \"Action\",\r\n      headerName: \"Action\",\r\n      width: 250,\r\n      renderCell: (params) =>  \r\n      <Button\r\n        sx={{\r\n          padding: \"1px 6px\",\r\n          borderRadius: \"5px\",\r\n          backgroundColor: \"#e33838\",\r\n          color: \"#ffff\",\r\n          borderColor: \"ffff\",\r\n        }}\r\n        variant=\"outlined\"\r\n        onClick={() => handleDeleteLoginUser(params.row)}\r\n      >\r\n        Delete\r\n      </Button>\r\n        \r\n    },\r\n  ];\r\n\r\n  const snackbar = useSnackbar();\r\n  const [loginUsersData, setLoginUsersData] = useState<any>();\r\n  const [isDataFetching, setIsDataFetching] = useState(false);\r\n  const [dpDate, setDPDate] = useState<Date>(new Date());\r\n  const [nextDisable, setNextDisable] = useState<boolean>(false);\r\n\r\n  const fetchRecords = async () => {\r\n    const loginUsersData = await FetchLoginUsersDataService(dpDate!);\r\n    if(loginUsersData){\r\n      setLoginUsersData(loginUsersData);\r\n    }else{\r\n      snackbar.error(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const autoLoginUsers = async () => {\r\n    try {\r\n      setIsDataFetching(true);\r\n      const result = await autoLoginAngel();\r\n      if (result?.status) {\r\n        snackbar.success(\"Auto Login Users Completed!\");\r\n        fetchRecords();\r\n      }\r\n    } catch (error) {\r\n      snackbar.error(\"Something went wrong:\");\r\n    } finally {\r\n      setIsDataFetching(false);\r\n    }\r\n  };\r\n\r\n  const saveDate = (date: Date) => {\r\n    setDPDate(date);\r\n  };\r\n\r\n  const toggleDate = (action: string) => {\r\n    if (action === \"prev\") {\r\n      const newDate = new Date(dpDate.getTime() - 24 * 60 * 60 * 1000);\r\n      setDPDate(newDate);\r\n    } else if (action === \"next\") {\r\n      const newDate = new Date(dpDate.getTime() + 24 * 60 * 60 * 1000);\r\n      setDPDate(newDate);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setIsDataFetching(true);\r\n        await fetchRecords();\r\n        setIsDataFetching(false);\r\n      } catch (error: any) {\r\n        setIsDataFetching(false);\r\n        snackbar.error(error.message);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    const selectedDate = `${dpDate.getDate()}-${dpDate.getMonth()}-${dpDate.getFullYear()}`;\r\n    const currDate = `${new Date().getDate()}-${new Date().getMonth()}-${new Date().getFullYear()}`;\r\n    if (selectedDate == currDate) setNextDisable(true);\r\n    else setNextDisable(false);\r\n  }, [dpDate]);\r\n\r\n  const handleTradeOnOff = async (rowData: any) => {\r\n    try {\r\n      const result = await tradeToggle(\r\n        rowData.clientId,\r\n        !rowData.isTradeEnabled\r\n      );\r\n      if (result?.status) {\r\n        snackbar.success(\"Trade toggle done!\");\r\n        fetchRecords();\r\n      } else {\r\n        snackbar.error(result?.message);\r\n      }\r\n    } catch (error: any) {\r\n      snackbar.error(\"Something went wrong: \" + error?.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLoginUser = async (rowData: any) =>{\r\n    try {\r\n      const result = await deleteLoginUser(rowData.id);\r\n      if (result?.status) {\r\n        snackbar.success(\"Record deleted!\");\r\n        fetchRecords();\r\n      } else {\r\n        snackbar.error(result?.message);\r\n      }\r\n    } catch (error:any) {\r\n      snackbar.error(\"Something went wrong: \" + error?.message);\r\n    }\r\n  }\r\n\r\n  const handleUserStatus = async (rowData: any) => {\r\n    try {\r\n      const result = await updateUserStatus(\r\n        rowData.clientId,\r\n        !rowData.isActive\r\n      );\r\n      if (result?.status) {\r\n        snackbar.success(\"User status updated!\");\r\n        fetchRecords();\r\n      } else {\r\n        snackbar.error(result?.message);\r\n      }\r\n    } catch (error: any) {\r\n      snackbar.error(\"Something went wrong: \" + error?.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AdminAppBar>\r\n        <AdminToolbar title={\"Login Users\"}></AdminToolbar>\r\n      </AdminAppBar>\r\n      <Grid container spacing={4}>\r\n        <Grid item sm={8}>\r\n          <DatePicker\r\n            label={\"Date\"}\r\n            onChange={(date: Date | null) => saveDate(date!)}\r\n            inputFormat=\"dd/MM/yyyy\"\r\n            disableFuture={true}\r\n            shouldDisableDate={(date: any) =>\r\n              date.getDay() === 0 || date.getDay() === 6\r\n            }\r\n            value={dpDate}\r\n            renderInput={(params: any) => (\r\n              <>\r\n                <IconButton\r\n                  onClick={() => toggleDate(\"prev\")}\r\n                  aria-label=\"previous\"\r\n                  style={{\r\n                    height: \"fit-content\",\r\n                    width: \"fit-content\",\r\n                    marginTop: \"25px\",\r\n                    marginRight: \"2px\",\r\n                    paddingRight: \"0px\",\r\n                    borderRadius: \"10px\",\r\n                  }}\r\n                >\r\n                  {isDataFetching ? (\r\n                    <CircularProgress\r\n                      style={{ height: \"15px\", width: \"15px\" }}\r\n                    />\r\n                  ) : (\r\n                    <ArrowBackIos style={{ height: \"15px\", width: \"15px\" }} />\r\n                  )}\r\n                </IconButton>\r\n                <TextField {...params} id=\"date\" margin=\"normal\" name=\"start\" />\r\n                <IconButton\r\n                  disabled={nextDisable}\r\n                  onClick={() => toggleDate(\"next\")}\r\n                  aria-label=\"next\"\r\n                  style={{\r\n                    height: \"fit-content\",\r\n                    width: \"fit-content\",\r\n                    marginTop: \"25px\",\r\n                    marginLeft: \"0px\",\r\n                    paddingLeft: \"4px\",\r\n                    borderRadius: \"10px\",\r\n                  }}\r\n                >\r\n                  {isDataFetching ? (\r\n                    <CircularProgress\r\n                      style={{ height: \"15px\", width: \"15px\" }}\r\n                    />\r\n                  ) : (\r\n                    <ArrowForwardIos\r\n                      style={{ height: \"15px\", width: \"15px\" }}\r\n                    />\r\n                  )}\r\n                </IconButton>\r\n              </>\r\n            )}\r\n          />\r\n          <LoadingButton\r\n            sx={{\r\n              marginLeft: \"10px\",\r\n              marginTop: \"15px\",\r\n              width: \"fit-content\",\r\n            }}\r\n            loading={isDataFetching}\r\n            onClick={fetchRecords}\r\n          >\r\n            <RefreshIcon />\r\n          </LoadingButton>\r\n          <LoadingButton\r\n            sx={{\r\n              marginLeft: \"10px\",\r\n              marginTop: \"15px\",\r\n              width: \"fit-content\",\r\n            }}\r\n            variant=\"outlined\"\r\n            loading={isDataFetching}\r\n            onClick={autoLoginUsers}\r\n          >\r\n            Auto Login Users\r\n          </LoadingButton>\r\n        </Grid>\r\n        <Grid item sm={12} sx={{ display: \"content\" }}>\r\n          <Grid item sm={12} sx={{ paddingLeft: \"20px !important\" }}>\r\n            <Card variant=\"outlined\" sx={{ padding: \"20px\" }}>\r\n              <CardHeader\r\n                title={\"Login Users List\"}\r\n                sx={{ padding: \"5px 24px 0 24px\" }}\r\n              ></CardHeader>\r\n              <CardContent sx={{ padding: \"10px !important\" }}>\r\n                {isDataFetching ? (\r\n                  <Skeleton animation=\"wave\" />\r\n                ) : (\r\n                  <LoginUsersTable\r\n                    columns={orderDataColumns}\r\n                    loginUsersData={loginUsersData}\r\n                  />\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginUsersManagement;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), 'Refresh');\nexports.default = _default;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.67 3.87 9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"\n}), 'ArrowBackIos');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z\"\n}), 'ArrowForwardIos');","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = experimentalStyled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = experimentalStyled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  /* Styles applied to the avatar element. */\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = experimentalStyled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  /* Styles applied to the action element. */\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = experimentalStyled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  /* Styles applied to the content wrapper element. */\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  const styleProps = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      styleProps: styleProps,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      styleProps: styleProps,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      styleProps: styleProps,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;"],"names":["_ref","loginUsersData","columns","pageSize","setPageSize","React","length","_jsx","Empty","title","Box","sx","height","width","backgroundColor","color","fontWeight","children","DataGrid","rows","disableColumnSelector","isRowSelectable","row","id","components","Toolbar","_jsxs","GridToolbarContainer","padding","GridToolbarColumnsButton","onResize","undefined","nonce","onResizeCapture","GridToolbarFilterButton","GridToolbarDensitySelector","GridToolbarExport","density","onPageSizeChange","newPageSize","getRowId","rowsPerPageOptions","BASE_URL","getBaseUrl","LoginUsersManagement","orderDataColumns","field","headerName","renderCell","params","isTradeEnabled","Button","borderRadius","borderColor","variant","onClick","handleTradeOnOff","align","headerAlign","valueGetter","date","Date","loginDateAndTime","hours","getHours","minutes","getMinutes","ampm","getFullYear","getMonth","getDate","handleDeleteLoginUser","snackbar","useSnackbar","setLoginUsersData","useState","isDataFetching","setIsDataFetching","dpDate","setDPDate","nextDisable","setNextDisable","fetchRecords","async","strDate","response","fetch","headers","getRequiredHeaders","json","usersData","error","console","log","Error","FetchLoginUsersDataService","toggleDate","action","newDate","getTime","message","fetchData","selectedDate","currDate","result","clientCode","status","requestOptions","method","body","JSON","stringify","trade","tradeToggle","rowData","clientId","success","deleteLoginUser","AdminAppBar","AdminToolbar","Grid","container","spacing","item","sm","DatePicker","label","onChange","saveDate","inputFormat","disableFuture","shouldDisableDate","getDay","value","renderInput","_Fragment","IconButton","style","marginTop","marginRight","paddingRight","CircularProgress","ArrowBackIos","TextField","margin","name","disabled","marginLeft","paddingLeft","ArrowForwardIos","LoadingButton","loading","RefreshIcon","autoLoginAngel","display","Card","CardHeader","CardContent","Skeleton","animation","LoginUsersTable","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","createSvgIcon","getCardHeaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardHeaderRoot","experimentalStyled","overridesResolver","props","styles","_extends","cardHeaderClasses","subheader","root","alignItems","CardHeaderAvatar","avatar","flex","CardHeaderAction","alignSelf","marginBottom","CardHeaderContent","content","inProps","ref","useThemeProps","className","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","_objectWithoutPropertiesLoose","styleProps","classes","composeClasses","useUtilityClasses","type","Typography","clsx","as"],"sourceRoot":""}