{"version":3,"file":"static/js/105.2fc4ce42.chunk.js","mappings":"gZAIMA,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAkB,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACjBC,EAAAA,EAAMC,KAAK,gBAAiBR,GAAU,KAAD,EAAhD,OAAgDC,EAAAG,EAAAK,KAApDP,EAAID,EAAJC,KAAIE,EAAAM,OAAA,SACLR,GAAI,wBAAAE,EAAAO,OAAA,GAAAZ,EAAA,KACZ,gBAHaa,GAAA,OAAAjB,EAAAkB,MAAA,KAAAC,UAAA,KAKP,SAASC,IACd,IAAAC,GAAmCC,EAAAA,EAAAA,aAAYvB,GAC/C,MAAO,CAAEwB,cADQF,EAATG,UAC2BzB,SADLsB,EAAXI,YAErB,C,eCOMC,EAAU,CACd,CAAEC,MAAO,sCAAuCC,MAAO,KACvD,CAAED,MAAO,sCAAuCC,MAAO,KACvD,CAAED,MAAO,sCAAuCC,MAAO,OA+IzD,EA5IiB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,KAAND,EAERE,EAAoCf,IAA5BG,EAAaY,EAAbZ,cAAexB,EAAQoC,EAARpC,SAEjBqC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,UAAW,GACXC,OAAQ,IACRC,SAAU,IAEZC,iBAAkBC,EAAAA,GAAW,CAC3BL,MAAOK,EAAAA,KACJL,MAAM,yBACNM,SAASZ,EAAE,gCACdO,UAAWI,EAAAA,KACRE,IAAI,GAAIb,EAAE,yBAA0B,CAAEc,KAAM,MAC5CF,SAASZ,EAAE,gCACdS,SAAUE,EAAAA,KACPE,IAAI,GAAIb,EAAE,yBAA0B,CAAEc,KAAM,MAC5CF,SAASZ,EAAE,kCAEhBe,SAAU,SAACC,GAAM,OAAKC,EAAeD,EAAO,IAGxCC,EAAc,eAAAlD,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO6C,GAAyB,OAAA/C,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACrDZ,EAASkD,GACNE,MAAK,WACJpB,EAASqB,QAAQnB,EAAE,wCACnBJ,EAAS,IAADwB,OAAKC,GAAsB,UACrC,IACCC,OAAM,WACLxB,EAASyB,MAAMvB,EAAE,qCACnB,IAAG,wBAAAxB,EAAAO,OAAA,GAAAZ,EAAA,KACN,gBATmBa,GAAA,OAAAjB,EAAAkB,MAAA,KAAAC,UAAA,KAWpB,OACEsC,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAAAC,SAAA,EACVC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,UAAU,KAAKC,QAAQ,KAAIJ,SACpC1B,EAAE,0BAELwB,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CACFF,UAAU,OACVG,UAAW,EACXC,YAAU,EACVlB,SAAUZ,EAAO+B,aAAaR,SAAA,EAE9BC,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CACRC,OAAO,SACPxB,UAAQ,EACRyB,WAAS,EACTC,GAAG,WACH5C,MAAOM,EAAE,qCACTuC,KAAK,WACLC,aAAa,cACbC,WAAS,EACTC,SAAUpD,EACVK,MAAOQ,EAAOa,OAAOP,SACrBkC,SAAUxC,EAAOyC,aACjBrB,MAAOpB,EAAO0C,QAAQpC,UAAYqC,QAAQ3C,EAAO4C,OAAOtC,UACxDuC,WAAY7C,EAAO0C,QAAQpC,UAAYN,EAAO4C,OAAOtC,YAEvDkB,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CACRC,OAAO,SACPxB,UAAQ,EACRyB,WAAS,EACTC,GAAG,YACH5C,MAAOM,EAAE,sCACTuC,KAAK,YACLC,aAAa,aACbE,SAAUpD,EACVK,MAAOQ,EAAOa,OAAOT,UACrBoC,SAAUxC,EAAOyC,aACjBrB,MAAOpB,EAAO0C,QAAQtC,WAAauC,QAAQ3C,EAAO4C,OAAOxC,WACzDyC,WAAY7C,EAAO0C,QAAQtC,WAAaJ,EAAO4C,OAAOxC,aAExDiB,EAAAA,EAAAA,MAACyB,EAAAA,EAAW,CAACpB,UAAU,WAAWO,OAAO,SAAQV,SAAA,EAC/CC,EAAAA,EAAAA,KAACuB,EAAAA,EAAS,CAACrB,UAAU,SAAQH,SAC1B1B,EAAE,sCAEL2B,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CACTC,KAAG,EACH,aAAW,SACXb,KAAK,SACL5C,MAAOQ,EAAOa,OAAOR,OACrBmC,SAAUxC,EAAOyC,aAAalB,SAE7BjC,EAAQ4D,KAAI,SAAC7C,GAAM,OAClBmB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAgB,CACfC,SAAS5B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,IAEfd,SAAUpD,EACVI,MAAOM,EAAEQ,EAAOd,OAChBC,MAAOa,EAAOb,OAHTa,EAAOb,MAIZ,UAIRgC,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CACRC,OAAO,SACPxB,UAAQ,EACRyB,WAAS,EACTC,GAAG,QACH5C,MAAOM,EAAE,kCACTuC,KAAK,QACLC,aAAa,QACbE,SAAUpD,EACVK,MAAOQ,EAAOa,OAAOV,MACrBqC,SAAUxC,EAAOyC,aACjBrB,MAAOpB,EAAO0C,QAAQvC,OAASwC,QAAQ3C,EAAO4C,OAAOzC,OACrD0C,WAAY7C,EAAO0C,QAAQvC,OAASH,EAAO4C,OAAOzC,SAEpDqB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAa,CACZC,KAAK,SACLrB,WAAS,EACTP,QAAQ,YACR6B,MAAM,UACNjB,SAAUpD,EACVsE,QAAStE,EACTuE,GAAI,CAAEC,GAAI,GAAIpC,SAEb1B,EAAE,2BAEL2B,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CACLlC,UAAWmC,EAAAA,GACXC,GAAE,IAAA7C,OAAMC,GAAsB,UAC9BsC,MAAM,UACNtB,WAAS,EACTwB,GAAI,CAAEC,GAAI,GAAIpC,SAEb1B,EAAE,6BAKb,C,2KCpGA,IA/CoB,SAAHjC,GAAwC,IAAlC2D,EAAQ3D,EAAR2D,SACfwC,GAAQC,EAAAA,EAAAA,KACdC,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAE9BI,EAAuB,WAC3BD,GAAiBD,EACnB,EAEA,OACEhD,EAAAA,EAAAA,MAACmD,EAAAA,SAAc,CAAAjD,SAAA,EACbC,EAAAA,EAAAA,KAACiD,EAAAA,EAAY,CACXC,OAAQ,CAAEC,KAAM,CAAEC,gBAAiBb,EAAMc,QAAQC,WAAWC,WAE9DvD,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CAACxB,MAAM,cAAcyB,SAAS,WAAU1D,UAC7CF,EAAAA,EAAAA,MAAC6D,EAAAA,EAAO,CAAA3D,SAAA,EACNC,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAAC8B,GAAI,CAAEyB,SAAU,MACrB3D,EAAAA,EAAAA,KAAC4D,EAAAA,EAAU,CACT,aAAW,WACX1D,UAAU,OACV2D,QAASd,EAAqBhD,UAE9BC,EAAAA,EAAAA,KAAC8D,EAAAA,EAAY,YAInB9D,EAAAA,EAAAA,KAAC+D,EAAAA,EAAS,CAAC7D,UAAU,OAAO8D,SAAS,KAAK9B,GAAI,CAAEC,GAAI,GAAIpC,UACtDF,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CACF8B,GAAI,CACF+B,QAAS,OACTC,cAAe,SACfC,WAAY,UACZpE,SAAA,EAEFC,EAAAA,EAAAA,KAACoE,EAAAA,EAAI,CAAClC,GAAI,CAAEmC,GAAI,KACftE,GACDC,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAAAL,UACFC,EAAAA,EAAAA,KAACsE,EAAAA,EAAc,CACbC,eAAgBxB,EAChByB,KAAM3B,aAOpB,C,8LCoGA,IA7IuB,SAAHzG,GAAuD,IAAjDmI,EAAcnI,EAAdmI,eAAgBC,EAAIpI,EAAJoI,KACxCC,GAOIC,EAAAA,EAAAA,MANFC,EAAeF,EAAfE,gBACAC,EAAeH,EAAfG,gBACAC,EAAUJ,EAAVI,WACAC,EAASL,EAATK,UACAC,EAASN,EAATM,UACAC,EAAIP,EAAJO,KAEFC,GAAoB3G,EAAAA,EAAAA,KAAZ4G,EAAID,EAAJC,KAAM7G,EAAC4G,EAAD5G,EAkBd,OACEwB,EAAAA,EAAAA,MAACsF,EAAAA,GAAM,CACLC,OAAO,OACPZ,KAAMA,EACNa,QAASd,EACTrC,GAAI,CACF,qBAAsB,CACpBoD,MAAOC,EAAAA,IAGXpF,QAAQ,YAAWJ,SAAA,EAEnBF,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CACF8B,GAAI,CACF+B,QAAS,OACTuB,eAAgB,gBAChBrB,WAAY,SACZsB,EAAG,GACH1F,SAAA,EAEFC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACE,QAAQ,KAAIJ,SAAE1B,EAAE,4BAC5B2B,EAAAA,EAAAA,KAAC4D,EAAAA,EAAU,CAAC5B,MAAM,UAAU6B,QAASU,EAAgBmB,KAAK,MAAK3F,UAC7DC,EAAAA,EAAAA,KAAC2F,EAAAA,EAAS,UAGd9F,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CAAC8B,GAAI,CAAE0D,GAAI,EAAGC,GAAI,GAAI9F,SAAA,EACxBC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACT6F,cAAY,EACZnF,GAAG,oBACHN,UAAW,EACXF,QAAQ,KAAIJ,SAEX1B,EAAE,qCAEL2B,EAAAA,EAAAA,KAACsB,EAAAA,EAAW,CAAAvB,UACVF,EAAAA,EAAAA,MAAC2B,EAAAA,EAAU,CACT,aAAW,WACXZ,KAAK,uBACLI,SAlDmB,SAAC+E,GAC5Bb,EAAKc,eAAgBD,EAAME,OAA4BjI,MACzD,EAiDUA,MAAOkH,EAAKgB,SAASnG,SAAA,EAErBC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAgB,CACf3D,MAAM,KACN4D,SAAS5B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,IACf9D,MAAOM,EAAE,0CAEX2B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAgB,CACf3D,MAAM,KACN4D,SAAS5B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,IACf9D,MAAOM,EAAE,+CAIf2B,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAC6F,cAAY,EAACnF,GAAG,gBAAgBN,UAAW,EAAGF,QAAQ,KAAIJ,SACnE1B,EAAE,iCAELwB,EAAAA,EAAAA,MAACsG,EAAAA,EAAiB,CAChBnE,MAAM,UACNhE,MAAOgH,EACPoB,WAAS,EACT1F,WAAS,EACTM,SArEiB,SAACqF,EAAQrB,GAChCH,EAAWG,EACb,EAmEmCjF,SAAA,EAE3BC,EAAAA,EAAAA,KAACsG,EAAAA,EAAY,CAACtI,MAAM,QAAO+B,SACxB1B,EAAE,yCAEL2B,EAAAA,EAAAA,KAACsG,EAAAA,EAAY,CAACtI,MAAM,OAAM+B,SACvB1B,EAAE,2CAGP2B,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAC6F,cAAY,EAACnF,GAAG,gBAAgBN,UAAW,EAAGF,QAAQ,KAAIJ,SACnE1B,EAAE,sCAELwB,EAAAA,EAAAA,MAACsG,EAAAA,EAAiB,CAChBnE,MAAM,UACNhE,MAAO+G,EACPqB,WAAS,EACT1F,WAAS,EACTM,SA9FsB,SAACqF,EAAQtB,GACrCH,EAAgBG,EAClB,EA4FwChF,SAAA,EAEhCC,EAAAA,EAAAA,KAACsG,EAAAA,EAAY,CAACtI,MAAM,MAAK+B,SACtB1B,EAAE,4CAEL2B,EAAAA,EAAAA,KAACsG,EAAAA,EAAY,CAACtI,MAAM,MAAK+B,SACtB1B,EAAE,+CAGP2B,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACT6F,cAAY,EACZnF,GAAG,mBACHN,UAAW,EACXF,QAAQ,KAAIJ,SAEX1B,EAAE,oCAELwB,EAAAA,EAAAA,MAACsG,EAAAA,EAAiB,CAChBnE,MAAM,UACNhE,MAAO8G,EACPsB,WAAS,EACT1F,WAAS,EACTM,SAxGoB,SAACqF,EAAQvB,GACnCH,EAAgBG,EAClB,EAsGsC/E,SAAA,EAE9BC,EAAAA,EAAAA,KAACsG,EAAAA,EAAY,CAACtI,OAAO,EAAK+B,SACvB1B,EAAE,gDAEL2B,EAAAA,EAAAA,KAACsG,EAAAA,EAAY,CAACtI,OAAO,EAAM+B,SACxB1B,EAAE,kDAMf,C","sources":["auth/hooks/useRegister.ts","auth/pages/Register.tsx","core/components/BoxedLayout.tsx","core/components/SettingsDrawer.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useMutation } from \"react-query\";\r\nimport { UserInfo } from \"../types/userInfo\";\r\n\r\nconst register = async (userInfo: UserInfo): Promise<UserInfo> => {\r\n  const { data } = await axios.post(\"/api/register\", userInfo);\r\n  return data;\r\n};\r\n\r\nexport function useRegister() {\r\n  const { isLoading, mutateAsync } = useMutation(register);\r\n  return { isRegistering: isLoading, register: mutateAsync };\r\n}\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LoadingButton from \"@material-ui/lab/LoadingButton\";\r\nimport { useFormik } from \"formik\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport BoxedLayout from \"../../core/components/BoxedLayout\";\r\nimport { useSnackbar } from \"../../core/contexts/SnackbarProvider\";\r\nimport { useRegister } from \"../hooks/useRegister\";\r\nimport { UserInfo } from \"../types/userInfo\";\r\n\r\nconst genders = [\r\n  { label: \"auth.register.form.gender.options.f\", value: \"F\" },\r\n  { label: \"auth.register.form.gender.options.m\", value: \"M\" },\r\n  { label: \"auth.register.form.gender.options.n\", value: \"NC\" },\r\n];\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const snackbar = useSnackbar();\r\n  const { t } = useTranslation();\r\n\r\n  const { isRegistering, register } = useRegister();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      firstName: \"\",\r\n      gender: \"F\",\r\n      lastName: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email(\"Invalid email address\")\r\n        .required(t(\"common.validations.required\")),\r\n      firstName: Yup.string()\r\n        .max(20, t(\"common.validations.max\", { size: 20 }))\r\n        .required(t(\"common.validations.required\")),\r\n      lastName: Yup.string()\r\n        .max(30, t(\"common.validations.max\", { size: 30 }))\r\n        .required(t(\"common.validations.required\")),\r\n    }),\r\n    onSubmit: (values) => handleRegister(values),\r\n  });\r\n\r\n  const handleRegister = async (values: Partial<UserInfo>) => {\r\n    register(values as UserInfo)\r\n      .then(() => {\r\n        snackbar.success(t(\"auth.register.notifications.success\"));\r\n        navigate(`/${process.env.PUBLIC_URL}/login`);\r\n      })\r\n      .catch(() => {\r\n        snackbar.error(t(\"common.errors.unexpected.subTitle\"));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <BoxedLayout>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        {t(\"auth.register.title\")}\r\n      </Typography>\r\n      <Box\r\n        component=\"form\"\r\n        marginTop={3}\r\n        noValidate\r\n        onSubmit={formik.handleSubmit}\r\n      >\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"lastName\"\r\n          label={t(\"auth.register.form.lastName.label\")}\r\n          name=\"lastName\"\r\n          autoComplete=\"family-name\"\r\n          autoFocus\r\n          disabled={isRegistering}\r\n          value={formik.values.lastName}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.lastName && Boolean(formik.errors.lastName)}\r\n          helperText={formik.touched.lastName && formik.errors.lastName}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"firstName\"\r\n          label={t(\"auth.register.form.firstName.label\")}\r\n          name=\"firstName\"\r\n          autoComplete=\"given-name\"\r\n          disabled={isRegistering}\r\n          value={formik.values.firstName}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.firstName && Boolean(formik.errors.firstName)}\r\n          helperText={formik.touched.firstName && formik.errors.firstName}\r\n        />\r\n        <FormControl component=\"fieldset\" margin=\"normal\">\r\n          <FormLabel component=\"legend\">\r\n            {t(\"auth.register.form.gender.label\")}\r\n          </FormLabel>\r\n          <RadioGroup\r\n            row\r\n            aria-label=\"gender\"\r\n            name=\"gender\"\r\n            value={formik.values.gender}\r\n            onChange={formik.handleChange}\r\n          >\r\n            {genders.map((gender) => (\r\n              <FormControlLabel\r\n                control={<Radio />}\r\n                key={gender.value}\r\n                disabled={isRegistering}\r\n                label={t(gender.label)}\r\n                value={gender.value}\r\n              />\r\n            ))}\r\n          </RadioGroup>\r\n        </FormControl>\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"email\"\r\n          label={t(\"auth.register.form.email.label\")}\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          disabled={isRegistering}\r\n          value={formik.values.email}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled={isRegistering}\r\n          loading={isRegistering}\r\n          sx={{ mt: 2 }}\r\n        >\r\n          {t(\"auth.register.submit\")}\r\n        </LoadingButton>\r\n        <Button\r\n          component={Link}\r\n          to={`/${process.env.PUBLIC_URL}/login`}\r\n          color=\"primary\"\r\n          fullWidth\r\n          sx={{ mt: 2 }}\r\n        >\r\n          {t(\"auth.register.back\")}\r\n        </Button>\r\n      </Box>\r\n    </BoxedLayout>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport GlobalStyles from \"@material-ui/core/GlobalStyles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport React, { useState } from \"react\";\r\nimport Logo from \"./Logo\";\r\nimport SettingsDrawer from \"./SettingsDrawer\";\r\n\r\ntype BoxedLayoutProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst BoxedLayout = ({ children }: BoxedLayoutProps) => {\r\n  const theme = useTheme();\r\n  const [settingsOpen, setSettingsOpen] = useState(false);\r\n\r\n  const handleSettingsToggle = () => {\r\n    setSettingsOpen(!settingsOpen);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <GlobalStyles\r\n        styles={{ body: { backgroundColor: theme.palette.background.paper } }}\r\n      />\r\n      <AppBar color=\"transparent\" position=\"relative\">\r\n        <Toolbar>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <IconButton\r\n            aria-label=\"settings\"\r\n            component=\"span\"\r\n            onClick={handleSettingsToggle}\r\n          >\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container component=\"main\" maxWidth=\"xs\" sx={{ mt: 6 }}>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Logo sx={{ mb: 2 }} />\r\n          {children}\r\n          <Box>\r\n            <SettingsDrawer\r\n              onDrawerToggle={handleSettingsToggle}\r\n              open={settingsOpen}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BoxedLayout;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport ToggleButton from \"@material-ui/core/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/core/ToggleButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { drawerWidth } from \"../config/layout\";\r\nimport { useSettings } from \"../contexts/SettingsProvider\";\r\n\r\ntype SettingsDrawerProps = {\r\n  onDrawerToggle: () => void;\r\n  open: boolean;\r\n};\r\n\r\nconst SettingsDrawer = ({ onDrawerToggle, open }: SettingsDrawerProps) => {\r\n  const {\r\n    changeCollapsed,\r\n    changeDirection,\r\n    changeMode,\r\n    collapsed,\r\n    direction,\r\n    mode,\r\n  } = useSettings();\r\n  const { i18n, t } = useTranslation();\r\n\r\n  const handleDirectionChange = (_: any, direction: \"ltr\" | \"rtl\") => {\r\n    changeDirection(direction);\r\n  };\r\n\r\n  const handleLanguageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    i18n.changeLanguage((event.target as HTMLInputElement).value);\r\n  };\r\n\r\n  const handleModeChange = (_: any, mode: string) => {\r\n    changeMode(mode);\r\n  };\r\n\r\n  const handleSidebarChange = (_: any, collapsed: boolean) => {\r\n    changeCollapsed(collapsed);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      open={open}\r\n      onClose={onDrawerToggle}\r\n      sx={{\r\n        \"& .MuiDrawer-paper\": {\r\n          width: drawerWidth,\r\n        },\r\n      }}\r\n      variant=\"temporary\"\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          p: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\">{t(\"settings.drawer.title\")}</Typography>\r\n        <IconButton color=\"inherit\" onClick={onDrawerToggle} edge=\"end\">\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </Box>\r\n      <Box sx={{ pl: 2, pr: 2 }}>\r\n        <Typography\r\n          gutterBottom\r\n          id=\"settings-language\"\r\n          marginTop={3}\r\n          variant=\"h6\"\r\n        >\r\n          {t(\"settings.drawer.language.label\")}\r\n        </Typography>\r\n        <FormControl>\r\n          <RadioGroup\r\n            aria-label=\"language\"\r\n            name=\"language-radio-group\"\r\n            onChange={handleLanguageChange}\r\n            value={i18n.language}\r\n          >\r\n            <FormControlLabel\r\n              value=\"en\"\r\n              control={<Radio />}\r\n              label={t(\"settings.drawer.language.options.en\")}\r\n            />\r\n            <FormControlLabel\r\n              value=\"fr\"\r\n              control={<Radio />}\r\n              label={t(\"settings.drawer.language.options.fr\")}\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\r\n          {t(\"settings.drawer.mode.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={mode}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleModeChange}\r\n        >\r\n          <ToggleButton value=\"light\">\r\n            {t(\"settings.drawer.mode.options.light\")}\r\n          </ToggleButton>\r\n          <ToggleButton value=\"dark\">\r\n            {t(\"settings.drawer.mode.options.dark\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\r\n          {t(\"settings.drawer.direction.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={direction}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleDirectionChange}\r\n        >\r\n          <ToggleButton value=\"ltr\">\r\n            {t(\"settings.drawer.direction.options.ltr\")}\r\n          </ToggleButton>\r\n          <ToggleButton value=\"rtl\">\r\n            {t(\"settings.drawer.direction.options.rtl\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n        <Typography\r\n          gutterBottom\r\n          id=\"settings-sidebar\"\r\n          marginTop={3}\r\n          variant=\"h6\"\r\n        >\r\n          {t(\"settings.drawer.sidebar.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={collapsed}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleSidebarChange}\r\n        >\r\n          <ToggleButton value={true}>\r\n            {t(\"settings.drawer.sidebar.options.collapsed\")}\r\n          </ToggleButton>\r\n          <ToggleButton value={false}>\r\n            {t(\"settings.drawer.sidebar.options.full\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SettingsDrawer;\r\n"],"names":["register","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userInfo","_yield$axios$post","data","wrap","_context","prev","next","axios","post","sent","abrupt","stop","_x","apply","arguments","useRegister","_useMutation","useMutation","isRegistering","isLoading","mutateAsync","genders","label","value","navigate","useNavigate","snackbar","useSnackbar","t","useTranslation","_useRegister","formik","useFormik","initialValues","email","firstName","gender","lastName","validationSchema","Yup","required","max","size","onSubmit","values","handleRegister","then","success","concat","process","catch","error","_jsxs","BoxedLayout","children","_jsx","Typography","component","variant","Box","marginTop","noValidate","handleSubmit","TextField","margin","fullWidth","id","name","autoComplete","autoFocus","disabled","onChange","handleChange","touched","Boolean","errors","helperText","FormControl","FormLabel","RadioGroup","row","map","FormControlLabel","control","Radio","LoadingButton","type","color","loading","sx","mt","Button","Link","to","theme","useTheme","_useState","useState","_useState2","_slicedToArray","settingsOpen","setSettingsOpen","handleSettingsToggle","React","GlobalStyles","styles","body","backgroundColor","palette","background","paper","AppBar","position","Toolbar","flexGrow","IconButton","onClick","SettingsIcon","Container","maxWidth","display","flexDirection","alignItems","Logo","mb","SettingsDrawer","onDrawerToggle","open","_useSettings","useSettings","changeCollapsed","changeDirection","changeMode","collapsed","direction","mode","_useTranslation","i18n","Drawer","anchor","onClose","width","drawerWidth","justifyContent","p","edge","CloseIcon","pl","pr","gutterBottom","event","changeLanguage","target","language","ToggleButtonGroup","exclusive","_","ToggleButton"],"sourceRoot":""}