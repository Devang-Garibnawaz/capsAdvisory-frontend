{"version":3,"file":"static/js/201.c3c3fb35.chunk.js","mappings":"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","sources":["core/components/BoxedLayout.tsx","auth/pages/Login.tsx","../node_modules/@material-ui/core/Link/linkClasses.js","../node_modules/@material-ui/core/Link/Link.js","core/components/SettingsDrawer.tsx"],"sourcesContent":["import AppBar from \"@material-ui/core/AppBar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport GlobalStyles from \"@material-ui/core/GlobalStyles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport React, { useState } from \"react\";\r\nimport Logo from \"./Logo\";\r\nimport SettingsDrawer from \"./SettingsDrawer\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { useAuth } from \"../../auth/contexts/AuthProvider\";\r\nimport { useSnackbar } from \"../../core/contexts/SnackbarProvider\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\ntype BoxedLayoutProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst BoxedLayout = ({ children }: BoxedLayoutProps) => {\r\n  const theme = useTheme();\r\n  const [settingsOpen, setSettingsOpen] = useState(false);\r\n  const { logout, userInfo } = useAuth();\r\n  const snackbar = useSnackbar();\r\n  const token = localStorage.getItem('authkey');\r\n  \r\n  const handleSettingsToggle = () => {\r\n    setSettingsOpen(!settingsOpen);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout().then(()=>{\r\n      <Navigate to={`/${process.env.PUBLIC_URL}`} replace/>\r\n    }).catch((err:any) =>\r\n      snackbar.error(err)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <GlobalStyles\r\n        styles={{ body: { backgroundColor: theme.palette.background.paper } }}\r\n      />\r\n      <AppBar color=\"transparent\" position=\"relative\">\r\n        <Toolbar>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          {token != '' && <IconButton\r\n            aria-label=\"logout\"\r\n            component=\"span\"\r\n            onClick={handleLogout}\r\n          >\r\n            <ExitToAppIcon />\r\n          </IconButton>}\r\n          <IconButton\r\n            aria-label=\"settings\"\r\n            component=\"span\"\r\n            onClick={handleSettingsToggle}\r\n          >\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container component=\"main\" maxWidth=\"xs\" sx={{ mt: 6 }}>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Logo sx={{ mb: 2 }} />\r\n          {children}\r\n          <Box>\r\n            <SettingsDrawer\r\n              onDrawerToggle={handleSettingsToggle}\r\n              open={settingsOpen}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BoxedLayout;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LoadingButton from \"@material-ui/lab/LoadingButton\";\r\nimport { useFormik } from \"formik\";\r\nimport { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport BoxedLayout from \"../../core/components/BoxedLayout\";\r\nimport { useSnackbar } from \"../../core/contexts/SnackbarProvider\";\r\nimport { useAuth } from \"../contexts/AuthProvider\";\r\n\r\nconst Login = () => {\r\n  const { isLoggingIn, login } = useAuth();\r\n  const navigate = useNavigate();\r\n  const snackbar = useSnackbar();\r\n  const { t } = useTranslation();\r\n\r\n  const handleLogin = (email: string, password: string) => {\r\n    login(email, password)\r\n      .then((data) =>{\r\n        if(data.status){\r\n          localStorage.setItem('email', email);\r\n          localStorage.setItem('clientId', data.clientId);\r\n          localStorage.setItem('pinNumber', data.pinNumber);\r\n          if(data.role === 'user'){\r\n            navigate(`/${process.env.PUBLIC_URL}/angel-broking-login`, { replace: true });\r\n          }else{\r\n            navigate(`/${process.env.PUBLIC_URL}/admin`, { replace: true });\r\n          }\r\n          \r\n        }\r\n        else{\r\n          snackbar.error(data.message);\r\n        }\r\n      })\r\n      .catch(() => snackbar.error(t(\"common.errors.unexpected.subTitle\")));\r\n  };\r\n  useEffect(() =>{\r\n    const token = localStorage.getItem('authkey');\r\n    if(token && token != \"\"){\r\n      const arrayToken = token?.split('.');\r\n      const tokenPayload = arrayToken && JSON.parse(atob(arrayToken[1]));\r\n      if(tokenPayload){\r\n        if(tokenPayload.role === 'user'){\r\n          navigate(`/${process.env.PUBLIC_URL}/angel-broking-login`, { replace: true });\r\n        }else{\r\n          navigate(`/${process.env.PUBLIC_URL}/admin`, { replace: true });\r\n        }\r\n      }\r\n      \r\n    }\r\n    \r\n  },[])\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: localStorage.getItem('email'),\r\n      password: localStorage.getItem('password'),\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email(t(\"common.validations.email\"))\r\n        .required(t(\"common.validations.required\")),\r\n      password: Yup.string()\r\n        .min(8, t(\"common.validations.min\", { size: 8 }))\r\n        .required(t(\"common.validations.required\")),\r\n    }),\r\n    onSubmit: (values) => handleLogin(values.email!, values?.password!),\r\n  });\r\n\r\n  return (\r\n    <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\r\n      <Grid\r\n        item\r\n        xs={false}\r\n        sm={4}\r\n        md={7}\r\n        sx={{\r\n          backgroundImage: \"url(./img/startup.svg)\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          bgcolor: \"background.default\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n        }}\r\n      />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} square>\r\n        <BoxedLayout>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            {t(\"auth.login.title\")}\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            marginTop={3}\r\n            noValidate\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <TextField\r\n              margin=\"normal\"\r\n              variant=\"filled\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label={t(\"auth.login.form.email.label\")}\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              disabled={isLoggingIn}\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              variant=\"filled\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label={t(\"auth.login.form.password.label\")}\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              disabled={isLoggingIn}\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n            />\r\n            <Box sx={{ textAlign: \"right\" }}>\r\n              <Link\r\n                component={RouterLink}\r\n                to={`/${process.env.PUBLIC_URL}/forgot-password`}\r\n                variant=\"body2\"\r\n              >\r\n                {t(\"auth.login.forgotPasswordLink\")}\r\n              </Link>\r\n            </Box>\r\n            <LoadingButton\r\n              type=\"submit\"\r\n              fullWidth\r\n              loading={isLoggingIn}\r\n              variant=\"contained\"\r\n              sx={{ mt: 3 }}\r\n            >\r\n              {t(\"auth.login.submit\")}\r\n            </LoadingButton>\r\n            <Button\r\n              component={RouterLink}\r\n              to={`/${process.env.PUBLIC_URL}/register`}\r\n              color=\"primary\"\r\n              fullWidth\r\n              sx={{ mt: 2 }}\r\n            >\r\n              {t(\"auth.login.newAccountLink\")}\r\n            </Button>\r\n          </Box>\r\n        </BoxedLayout>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport capitalize from '../utils/capitalize';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = styleProps;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = experimentalStyled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styles[`underline${capitalize(styleProps.underline)}`], styleProps.component === 'button' && styles.button);\n  }\n})(({\n  styleProps\n}) => {\n  return _extends({}, styleProps.underline === 'none' && {\n    textDecoration: 'none'\n  }, styleProps.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, styleProps.underline === 'always' && {\n    textDecoration: 'underline'\n  }, styleProps.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'hover',\n    variant = 'inherit'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const styleProps = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    styleProps: styleProps,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'hover'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import Box from \"@material-ui/core/Box\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport ToggleButton from \"@material-ui/core/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/core/ToggleButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { drawerWidth } from \"../config/layout\";\r\nimport { useSettings } from \"../contexts/SettingsProvider\";\r\n\r\ntype SettingsDrawerProps = {\r\n  onDrawerToggle: () => void;\r\n  open: boolean;\r\n};\r\n\r\nconst SettingsDrawer = ({ onDrawerToggle, open }: SettingsDrawerProps) => {\r\n  const {\r\n    changeCollapsed,\r\n    changeDirection,\r\n    changeMode,\r\n    collapsed,\r\n    direction,\r\n    mode,\r\n  } = useSettings();\r\n  const { i18n, t } = useTranslation();\r\n\r\n  const handleDirectionChange = (_: any, direction: \"ltr\" | \"rtl\") => {\r\n    changeDirection(direction);\r\n  };\r\n\r\n  const handleLanguageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    i18n.changeLanguage((event.target as HTMLInputElement).value);\r\n  };\r\n\r\n  const handleModeChange = (_: any, mode: string) => {\r\n    changeMode(mode);\r\n  };\r\n\r\n  const handleSidebarChange = (_: any, collapsed: boolean) => {\r\n    changeCollapsed(collapsed);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      open={open}\r\n      onClose={onDrawerToggle}\r\n      sx={{\r\n        \"& .MuiDrawer-paper\": {\r\n          width: drawerWidth,\r\n        },\r\n      }}\r\n      variant=\"temporary\"\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          p: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\">{t(\"settings.drawer.title\")}</Typography>\r\n        <IconButton color=\"inherit\" onClick={onDrawerToggle} edge=\"end\">\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </Box>\r\n      <Box sx={{ pl: 2, pr: 2 }}>\r\n        <Typography\r\n          gutterBottom\r\n          id=\"settings-language\"\r\n          marginTop={3}\r\n          variant=\"h6\"\r\n        >\r\n          {t(\"settings.drawer.language.label\")}\r\n        </Typography>\r\n        <FormControl>\r\n          <RadioGroup\r\n            aria-label=\"language\"\r\n            name=\"language-radio-group\"\r\n            onChange={handleLanguageChange}\r\n            value={i18n.language}\r\n          >\r\n            <FormControlLabel\r\n              value=\"en\"\r\n              control={<Radio />}\r\n              label={t(\"settings.drawer.language.options.en\")}\r\n            />\r\n            <FormControlLabel\r\n              value=\"fr\"\r\n              control={<Radio />}\r\n              label={t(\"settings.drawer.language.options.fr\")}\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\r\n          {t(\"settings.drawer.mode.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={mode}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleModeChange}\r\n        >\r\n          <ToggleButton value=\"light\">\r\n            {t(\"settings.drawer.mode.options.light\")}\r\n          </ToggleButton>\r\n          <ToggleButton value=\"dark\">\r\n            {t(\"settings.drawer.mode.options.dark\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\r\n          {t(\"settings.drawer.direction.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={direction}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleDirectionChange}\r\n        >\r\n          <ToggleButton value=\"ltr\">\r\n            {t(\"settings.drawer.direction.options.ltr\")}\r\n          </ToggleButton>\r\n          <ToggleButton value=\"rtl\">\r\n            {t(\"settings.drawer.direction.options.rtl\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n        <Typography\r\n          gutterBottom\r\n          id=\"settings-sidebar\"\r\n          marginTop={3}\r\n          variant=\"h6\"\r\n        >\r\n          {t(\"settings.drawer.sidebar.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={collapsed}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleSidebarChange}\r\n        >\r\n          <ToggleButton value={true}>\r\n            {t(\"settings.drawer.sidebar.options.collapsed\")}\r\n          </ToggleButton>\r\n          <ToggleButton value={false}>\r\n            {t(\"settings.drawer.sidebar.options.full\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SettingsDrawer;\r\n"],"names":["_ref","children","theme","useTheme","settingsOpen","setSettingsOpen","useState","logout","userInfo","useAuth","snackbar","useSnackbar","token","localStorage","getItem","handleSettingsToggle","_jsxs","React","_jsx","GlobalStyles","styles","body","backgroundColor","palette","background","paper","AppBar","color","position","Toolbar","Box","sx","flexGrow","IconButton","component","onClick","handleLogout","then","Navigate","catch","err","error","ExitToAppIcon","SettingsIcon","Container","maxWidth","mt","display","flexDirection","alignItems","Logo","mb","SettingsDrawer","onDrawerToggle","open","Login","isLoggingIn","login","navigate","useNavigate","t","useTranslation","useEffect","arrayToken","split","tokenPayload","JSON","parse","atob","role","replace","formik","useFormik","initialValues","email","password","validationSchema","Yup","required","min","size","onSubmit","values","handleLogin","data","status","setItem","clientId","pinNumber","message","Grid","container","height","item","xs","sm","md","backgroundImage","backgroundRepeat","bgcolor","backgroundSize","backgroundPosition","Paper","square","BoxedLayout","Typography","variant","marginTop","noValidate","handleSubmit","TextField","margin","fullWidth","id","label","name","autoComplete","autoFocus","disabled","value","onChange","handleChange","touched","Boolean","errors","helperText","type","textAlign","Link","RouterLink","to","LoadingButton","loading","Button","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","LinkRoot","experimentalStyled","overridesResolver","props","styleProps","_extends","root","capitalize","underline","button","textDecoration","WebkitTapHighlightColor","outline","border","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","inProps","ref","useThemeProps","className","onBlur","onFocus","TypographyClasses","other","_objectWithoutPropertiesLoose","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","clsx","event","current","changeCollapsed","changeDirection","changeMode","collapsed","direction","mode","useSettings","i18n","Drawer","anchor","onClose","width","drawerWidth","justifyContent","p","edge","CloseIcon","pl","pr","gutterBottom","FormControl","RadioGroup","changeLanguage","target","language","FormControlLabel","control","Radio","ToggleButtonGroup","exclusive","handleModeChange","_","ToggleButton","handleDirectionChange","handleSidebarChange"],"sourceRoot":""}